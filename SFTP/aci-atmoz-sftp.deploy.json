{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceName": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The storage account to store upload folder"
      }
    },
    "storageAccountKind": {
      "type": "string",
      "allowedValues": [
        "Storage",
        "StorageV2",
        "BlobStorage",
        "FileStorage",
        "BlockBlobStorage"
      ],
      "defaultValue": "StorageV2",
      "metadata": {
        "description": "Storage Account Kind"
      }
    },
    "storageAccountSku": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage Account SKU Type."
      }
    },
    "sftpUserName": {
      "type": "string",
      "metadata": {
        "description": "The sftp username"
      }
    },
    "sftpPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The sftp user password. You should modify this template to encrypt it using atmoz/makepasswd as described in https://github.com/atmoz/sftp"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName'))]",
    "storageApiVersion": "[providers('Microsoft.Storage','storageAccounts').apiVersions[0]]",
    "azureFileShareName": "[concat('sftpvolume',parameters('sftpUserName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "kind": "[parameters('storageAccountKind')]",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "[variables('storageApiVersion')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[parameters('storageAccountSku')]"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('storageAccountName'), '/default/', variables('azureFileShareName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "shareQuota": 5120
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-10-01",
      "location": "[variables('location')]",
      "name": "[parameters('resourceName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "containers": [
          {
            "name": "[parameters('resourceName')]",
            "properties": {
              "image": "atmoz/sftp:latest",
              "ports": [
                {
                  "port": 22
                }
              ],
              "environmentVariables": [
                {
                  "name": "SFTP_USERS",
                  "value": "[concat(parameters('sftpUserName'),':',parameters('sftpPassword'),':1001')]"
                }
              ],
              "resources": {
                "requests": {
                  "memoryInGB": 1,
                  "cpu": 2
                }
              },
              "volumeMounts": [
                {
                  "name": "[variables('azureFileShareName')]",
                  "mountPath": "[concat('/home/',parameters('sftpUserName'),'/upload')]",
                  "readOnly": false
                }
              ]
            }
          }
        ],
        "restartPolicy": "OnFailure",
        "ipAddress": {
          "ports": [
            {
              "protocol": "TCP",
              "port": 22
            }
          ],
          "dnsNameLabel": "[parameters('resourceName')]",
          "type": "Public"
        },
        "osType": "Linux",
        "volumes": [
          {
            "name": "[variables('azureFileShareName')]",
            "azureFile": {
              "shareName": "[variables('azureFileShareName')]",
              "readOnly": false,
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listkeys(variables('storageAccountId'), variables('storageApiVersion')).keys[0].value]"
            }
          }
        ]
      }
    }
  ]
}
